// Generated by CoffeeScript 1.6.3
(function() {
  var DEBUG, box, cat, dbg, ex, from, id, iota, noun, plus, qp, qv, rsh, sha, size, st, test, val, vd, verb, vm, vt, wd;

  vt = '"+,<{#~';

  plus = function(a, w) {
    var i;
    return {
      p: (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = w.p.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(a.p[i] + w.p[i]);
        }
        return _results;
      })()
    };
  };

  cat = function(a, w) {
    return {
      p: a.p.concat(w.p)
    };
  };

  box = function(w) {
    return {
      p: [w.p],
      t: 1
    };
  };

  id = function(w) {
    return w;
  };

  from = function(a, w) {
    return {
      p: w.p.slice(a.p, +a.p + 1 || 9e9)
    };
  };

  size = function(w) {
    return {
      p: w.p.length
    };
  };

  rsh = function(a, w) {
    var i;
    return {
      p: (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = a.p - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(w.p[i % w.p.length]);
        }
        return _results;
      })()
    };
  };

  sha = function(w) {
    return {
      p: [w.t ? 0 : w.p.length]
    };
  };

  iota = function(w) {
    var i;
    return {
      p: (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = w.p - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(i);
        }
        return _results;
      })()
    };
  };

  vd = [0, plus, cat, 0, from, rsh, 0];

  vm = [0, id, 0, box, size, sha, iota];

  noun = function(c) {
    if (c < '0' || c > '9') {
      return 0;
    } else {
      return {
        p: [c - '0'],
        t: 1
      };
    }
  };

  verb = function(c) {
    var i;
    return [
      (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = vt.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          if (vt[i] === c) {
            _results.push(i);
          }
        }
        return _results;
      })()
    ][0][0] || 0;
  };

  wd = function(s) {
    var c, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = s.length; _i < _len; _i++) {
      c = s[_i];
      _results.push(noun(c) || verb(c) || c);
    }
    return _results;
  };

  val = function(x) {
    return !(typeof x === "object") && x !== void 0;
  };

  qv = function(c) {
    return val(c);
  };

  qp = function(c) {
    return val(c) && (c >= 'a' || c <= 'z');
  };

  st = {};

  ex = function(e, x) {
    var a;
    if (x == null) {
      x = 0;
    }
    a = e[x];
    if (qp(a)) {
      if (e[x + 1] === '=') {
        return st[a] = ex(e, x + 2);
      }
      a = st[a];
    }
    if (qv(a)) {
      return vm[a](ex(e, x + 1));
    } else if (val(e[x + 1])) {
      return vd[e[x + 1]](a, ex(e, x + 2));
    } else {
      return a;
    }
  };

  DEBUG = true;

  dbg = function(m) {
    if (DEBUG) {
      return console.log(m);
    }
  };

  test = function(m) {
    return console.log(m);
  };

/*
  test(ex(wd("5+1")).p[0] === 6);

  test(ex(wd("b=5")).p[0] === 5);

  test(ex(wd("+b")).p[0] === 5);

  ex(wd("a=3"));

  test(ex(wd("a+b")).p[0] === 8);

  test(ex(wd("q=1,2")).p.length === 2);

  test(ex(wd("m=2,4")).p.length === 2);

  test(ex(wd("+q")).p.length === 2);

  test(ex(wd("m+q")).p + '' === [3, 6] + '');

  test(ex(wd("m=2,4,6")).p + '' === [2, 4, 6] + '');

  test(ex(wd("z=<1,2")).p + '' === [[1, 2]] + '');

  test(ex(wd("z,z")).p + '' === [[1, 2], [1, 2]] + '');

  test(ex(wd("z,z")).p + '' === [[1, 2], [1, 2]] + '');

  test(ex(wd("{z,z")).p + '' === [2] + '');

  test(ex(wd("0{1,4")).p[0] === 1);

  test(ex(wd("1{1,4")).p[0] === 4);

  test(ex(wd("#1,2,3")).p[0] === 3);

  test(ex(wd("#<1,2,3")).p[0] === 0);

  test(ex(wd("#3")).p[0] === 0);

  test(ex(wd("2#1,2,3,4")).p + '' === '' + [1, 2]);

  test(ex(wd("4#1,2")).p + '' === '' + [1, 2, 1, 2]);

  test(ex(wd("z=<1,2")).p + '' === [[1, 2]] + '');

  test(ex(wd("1#<z")).p + '' === '' + [1, 2]);

  test(ex(wd("1#1,2")).p + '' === '' + [1]);

  test(ex(wd("~9")).p + '' === '' + [0, 1, 2, 3, 4, 5, 6, 7, 8]);

  test(ex(wd("~9+9")).p + '' === '' + [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]);
*/

  window.apl = function(s) {
    return ex(wd(s)).p;
  }
}).call(this);
